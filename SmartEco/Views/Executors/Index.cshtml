@model IEnumerable<SmartEco.Models.Executor>
@using System.Net
@using SmartEco.Controllers
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Http
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Executors"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@SharedLocalizer["Executors"]</h2>
@{
    string Role = Context.Session.GetString("Role");
}
@if (Role == "admin" || Role == "moderator" || Role == "Almaty" || Role == "Shymkent")
{
    <p>
        @Html.ActionLink(SharedLocalizer["Create"], "Create", new { PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
    </p>
}
@using (Html.BeginForm("Index", "Executors", new { SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter }, FormMethod.Get))
{
    @Html.Editor("SortOrder", null, new { htmlAttributes = new { @hidden = "hidden" }, value = ViewBag.SortOrder })
    @if (ViewBag.EndPage > 1)
    {
        <ul class="pagination">
            @if (ViewBag.PageNumber > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                    new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber - 1, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }

            @for (var page = (int)ViewBag.StartPage; page <= (int)ViewBag.EndPage; page++)
            {
                <li class="@(page == ViewBag.PageNumber ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = page, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }

            @if (ViewBag.PageNumber < ViewBag.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber + 1, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.TotalPages, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }
        </ul>
    }
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(c => c.ToList().FirstOrDefault().FullName).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.FullNameSort, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                    <br />
                    @Html.Editor("FullNameFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(c => c.ToList().FirstOrDefault().Position).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.PositionSort, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                    <br />
                    @Html.Editor("PositionFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                </th>
                <th>
                    @Html.DropDownList("PageSize", (IEnumerable<SelectListItem>)ViewBag.PageSizeList, htmlAttributes: new { @class = "form-control" })
                    <input type="submit" value="@SharedLocalizer["Find"]" class="btn btn-default">
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Position)
                    </td>
                    @if (Role == "admin" || Role == "moderator" || Role == "Almaty" || Role == "Shymkent")
                    {
                        <td>
                            @Html.ActionLink(SharedLocalizer["Edit"], "Edit", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter }) |
                            @Html.ActionLink(SharedLocalizer["Details"], "Details", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter }) |
                            @Html.ActionLink(SharedLocalizer["Delete"], "Delete", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.ActionLink(SharedLocalizer["Details"], "Details", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    @if (ViewBag.EndPage > 1)
    {
        <ul class="pagination">
            @if (ViewBag.PageNumber > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber - 1, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }

            @for (var page = (int)ViewBag.StartPage; page <= (int)ViewBag.EndPage; page++)
            {
                <li class="@(page == ViewBag.PageNumber ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = page, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }

            @if (ViewBag.PageNumber < ViewBag.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber + 1, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.TotalPages, SortOrder = ViewBag.SortOrder, FullNameFilter = ViewBag.FullNameFilter, PositionFilter = ViewBag.PositionFilter })
                </li>
            }
        </ul>
    }
}