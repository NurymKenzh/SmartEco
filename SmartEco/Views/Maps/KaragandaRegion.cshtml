@using System.Net
@using SmartEco.Controllers
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Http
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["KaragandaRegion"];
}
@{
    string Role = Context.Session.GetString("Role");
}
@if (Role == "admin" || Role == "moderator" || Role == "KaragandaRegion")
{
    <link href="~/lib/openlayers/ol.css" rel="stylesheet" />
    <script src="~/lib/openlayers/ol.js"></script>

    <style>
        /*.map {
            height: calc(100vh - 159px);
        }*/
    </style>
    <style>
        .ol-custom-overviewmap,
        .ol-custom-overviewmap.ol-uncollapsible {
            bottom: auto;
            left: auto;
            right: 0.5em;
            top: 2.5em;
        }

            .ol-custom-overviewmap:not(.ol-collapsed) {
                border: 1px solid black;
            }

            .ol-custom-overviewmap .ol-overviewmap-map {
                border: none;
                width: 300px;
            }

            .ol-custom-overviewmap .ol-overviewmap-box {
                border: 2px solid red;
            }

            .ol-custom-overviewmap:not(.ol-collapsed) button {
                bottom: auto;
                left: auto;
                right: 1px;
                top: 1px;
            }

        /*.ol-rotate {
              top: 170px;
              right: 0;
          }*/

        .fullscreen:-moz-full-screen {
            /*height: 100%;*/
            height: calc(100vh - 159px);
        }

        .fullscreen:-webkit-full-screen {
            /*height: 100%;*/
            height: calc(100vh - 159px);
        }

        .fullscreen:-ms-fullscreen {
            /*height: 100%;*/
            height: calc(100vh - 159px);
        }

        .fullscreen:fullscreen {
            /*height: 100%;*/
            height: calc(100vh - 159px);
        }

        .fullscreen {
            margin-bottom: 10px;
            width: 100%;
            /*height: 400px;*/
            height: calc(100vh - 159px);
        }

        /*.ol-rotate {
          top: 3em;
        }*/

        .map {
            width: 80%;
            height: 100%;
            float: left;
        }

        .sidepanel {
            background: #1F6B75;
            width: 20%;
            height: 100%;
            /*height: calc(100vh - 159px);*/
            float: left;
        }

        .sidepanel-title {
            width: 100%;
            /*font-size: 3em;*/
            /*color: #ffffff;*/
            display: block;
            /*text-align: center;*/
        }
    </style>

    <div id="fullscreen" class="fullscreen">
        <div id="map" class="map"></div>
        <div class="sidepanel">
            <span class="sidepanel-title">Side Panel</span>
            <select id="layerBaseType" class="form-control form-control-sm" onchange="ChangeLayers()">
                <option value="OSM">OpenStreetMap</option>
                <option value="BingAerialWithLabels">Bing Aerial</option>
                <option value="BingRoadStatic">Bing Road (static)</option>
                <option value="BingRoadDynamic">Bing Road (dynamic)</option>
                <option value="HERENormalDay">HERE Normal Day</option>
                <option value="HERENormalDayTransit">HERE Normal Day Transit</option>
                <option value="HERETerrainDay">HERE Terrain Day</option>
                <option value="HEREHybridDay">HERE Hybrid Day</option>
                <option value="StamenWatercolor">Stamen Watercolor</option>
                <option value="StamenTerrain">Stamen Terrain</option>
                <option value="StamenToner">Stamen Toner</option>
                <option value="ArcGIS">ArcGIS</option>
                <option value="ThunderforestOpenCycleMap">Thunderforest OpenCycleMap</option>
                <option value="ThunderforestTransport">Thunderforest Transport</option>
                <option value="ThunderforestLandscape">Thunderforest Landscape</option>
                <option value="ThunderforestOutdoors">Thunderforest Outdoors</option>
                <option value="ThunderforestTransportDark">Thunderforest Transport Dark</option>
                <option value="ThunderforestSpinalMap">Thunderforest Spinal Map</option>
                <option value="ThunderforestPioneer">Thunderforest Pioneer</option>
                <option value="ThunderforestMobileAtlas">Thunderforest Mobile Atlas</option>
                <option value="ThunderforestNeighbourhood">Thunderforest Neighbourhood</option>
            </select>
        </div>
    </div>

    <script>
    var layers = [];

    var HEREappId = 'SLdBasp4s1oq2oUbVGxy';
    var HEREappCode = 'D9-h9iVhjgUB_9eUlFETXA';

    var Source_OSM = new ol.source.OSM();
    layers.push(new ol.layer.Tile({
        source: Source_OSM
    }));
    layers[0].set('name', 'Base');

    Source_BingAerialWithLabels = new ol.source.BingMaps({
        key: 'AvXWBeyEt0tMq0Cmi-TdlXA6qG2GDpuV1UcSbSqNXbfHcQ41GFYtjpu0gz8RS6-b',
        imagerySet: 'AerialWithLabels',
    });
    Source_BingRoadStatic = new ol.source.BingMaps({
        key: 'AvXWBeyEt0tMq0Cmi-TdlXA6qG2GDpuV1UcSbSqNXbfHcQ41GFYtjpu0gz8RS6-b',
        imagerySet: 'Road',
    });
    Source_BingRoadDynamic = new ol.source.BingMaps({
        key: 'AvXWBeyEt0tMq0Cmi-TdlXA6qG2GDpuV1UcSbSqNXbfHcQ41GFYtjpu0gz8RS6-b',
        imagerySet: 'RoadOnDemand',
    });

    var urlTpl = 'https://{1-4}.{base}.maps.cit.api.here.com' +
        '/{type}/2.1/maptile/newest/{scheme}/{z}/{x}/{y}/256/png' +
        '?app_id={app_id}&app_code={app_code}';
    function HEREcreateUrl(tpl, HERElayerDesc) {
        return tpl
          .replace('{base}', HERElayerDesc.base)
          .replace('{type}', HERElayerDesc.type)
          .replace('{scheme}', HERElayerDesc.scheme)
          .replace('{app_id}', HERElayerDesc.app_id)
          .replace('{app_code}', HERElayerDesc.app_code);
    };

    var HERElayerDescNormalDay = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescNormalDayTransit = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day.transit',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDayTransit = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDayTransit),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescTerrainDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'terrain.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERETerrainDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescTerrainDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescHybridDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'hybrid.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HEREHybridDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescHybridDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var Source_StamenWatercolor = new ol.source.Stamen({
        layer: 'watercolor'
    });

    var Source_StamenTerrain = new ol.source.Stamen({
        layer: 'terrain'
    });

    var Source_StamenToner = new ol.source.Stamen({
        layer: 'toner'
    });

    var Source_ArcGIS = new ol.source.XYZ({
        attributions: 'Tiles © <a href="https://services.arcgisonline.com/ArcGIS/' +
            'rest/services/World_Topo_Map/MapServer">ArcGIS</a>',
        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +
            'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
    });

    var Source_ThunderforestOpenCycleMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransport = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestLandscape = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestOutdoors = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransportDark = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestSpinalMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestPioneer = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestMobileAtlas = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestNeighbourhood = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var overviewMapControl = new ol.control.OverviewMap({
        className: 'ol-overviewmap ol-custom-overviewmap',
        //layers: [
        //    new ol.layer.Tile({
        //        source: Source_OSM
        //    })
        //],
        collapseLabel: '\u00BB',
        label: '\u00AB',
        collapsed: false
    });

    var map = new ol.Map({
        controls: new ol.control.defaults({ attributionOptions: { collapsible: true } }).extend([
            new ol.control.ScaleLine(),
            overviewMapControl,
            new ol.control.FullScreen({
                source: 'fullscreen'
            })
        ]),
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([70.98, 48.70]),
            zoom: 7
        })
    });

    function ChangeLayers() {
        map.getLayers().forEach(function (layer) {
            if (layer.get('name') == 'Base') {
                if ($('#layerBaseType').val() == 'OSM') {
                    layer.setSource(Source_OSM);
                }
                else if ($('#layerBaseType').val() == 'BingAerialWithLabels') {
                    layer.setSource(Source_BingAerialWithLabels);
                }
                else if ($('#layerBaseType').val() == 'BingRoadStatic') {
                    layer.setSource(Source_BingRoadStatic);
                }
                else if ($('#layerBaseType').val() == 'BingRoadDynamic') {
                    layer.setSource(Source_BingRoadDynamic);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDay') {
                    layer.setSource(Source_HERENormalDay);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDayTransit') {
                    layer.setSource(Source_HERENormalDayTransit);
                }
                else if ($('#layerBaseType').val() == 'HERETerrainDay') {
                    layer.setSource(Source_HERETerrainDay);
                }
                else if ($('#layerBaseType').val() == 'HEREHybridDay') {
                    layer.setSource(Source_HEREHybridDay);
                }
                else if ($('#layerBaseType').val() == 'StamenWatercolor') {
                    layer.setSource(Source_StamenWatercolor);
                }
                else if ($('#layerBaseType').val() == 'StamenTerrain') {
                    layer.setSource(Source_StamenTerrain);
                }
                else if ($('#layerBaseType').val() == 'StamenToner') {
                    layer.setSource(Source_StamenToner);
                }
                else if ($('#layerBaseType').val() == 'ArcGIS') {
                    layer.setSource(Source_ArcGIS);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOpenCycleMap') {
                    layer.setSource(Source_ThunderforestOpenCycleMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransport') {
                    layer.setSource(Source_ThunderforestTransport);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestLandscape') {
                    layer.setSource(Source_ThunderforestLandscape);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOutdoors') {
                    layer.setSource(Source_ThunderforestOutdoors);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransportDark') {
                    layer.setSource(Source_ThunderforestTransportDark);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestSpinalMap') {
                    layer.setSource(Source_ThunderforestSpinalMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestPioneer') {
                    layer.setSource(Source_ThunderforestPioneer);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestMobileAtlas') {
                    layer.setSource(Source_ThunderforestMobileAtlas);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestNeighbourhood') {
                    layer.setSource(Source_ThunderforestNeighbourhood);
                }
            }
        })
    }
    </script>
}
