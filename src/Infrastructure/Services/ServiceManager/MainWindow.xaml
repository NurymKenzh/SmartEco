<Window x:Class="ServiceManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ServiceManager"
        xmlns:models="clr-namespace:ServiceManager.Models"
        mc:Ignorable="d"
        Title="SmartEco Service Manager" Height="600" Width="800">
    <Window.Resources>
        <local:BrushColorConverter x:Key="brushColorConverter" />

        <Style TargetType="Button" x:Key="ActionButtonBorder">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Padding" Value="10, 7" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Label" x:Key="LabelButton">
            <Setter Property="Padding" Value="7, 0" />
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="TabControlServices">
            <TabItem Header="Monitoring" x:Name="TabServices">
                <Grid Background="Transparent" ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <DataGrid x:Name="DataGridServices" IsReadOnly="True"
                              Background="Transparent"
                              AutoGenerateColumns="False"
                              HorizontalGridLinesBrush="#F5F5F5"
                              RowBackground="#F5F5F5"
                              AlternatingRowBackground="White"
                              VerticalGridLinesBrush="#F5F5F5"
                              ItemsSource="{Binding}">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#bdbfbd" />
                                            <Setter Property="BorderBrush" Value="#bdbfbd" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <!--<DataGrid.Items>
                                <models:ServiceMonitoring Number="1" Name=".NET Reporter Service" DisplayName=".NET Reporter Service" Status="Unknown" LastTimeCheking="2023-08-18 14:21:43" LampColor="Gray" />
                            </DataGrid.Items>-->
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="№" Binding="{Binding Path=Number, StringFormat={}\{0:N0\}}" Width="40" />
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" Width="200" />
                                <DataGridTextColumn Header="Display name" Binding="{Binding Path=DisplayName}" Width="200" />
                                <DataGridTemplateColumn Header="" Width="10">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Ellipse Width="10" Height="10" Fill="{Binding Path=ServiceState.LampColorType, Converter={StaticResource brushColorConverter}}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Status" Binding="{Binding Path=ServiceState.Status}" Width="150" />
                                <DataGridTextColumn Header="Last time cheking" Binding="{Binding Path=LastTimeCheking}" Width="150" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Reporter" x:Name="TabMonitoringReporter" IsSelected="True">
                <Grid x:Name="ReporterGrid" Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" BorderBrush="LightGray" BorderThickness="0 0 0 1" />
                    <Border Grid.Row="1" BorderBrush="LightGray" BorderThickness="0 0 0 1" />

                    <Canvas Grid.Row="0" Height="60" Background="Transparent" VerticalAlignment="Top">
                        <Ellipse x:Name="LampReporter" Width="12" Height="12" Fill="{Binding Path=ServiceState.LampColorType, Converter={StaticResource brushColorConverter}}" Margin="15, 23" />
                        <Label x:Name="LabelStatusReporter" Content="{Binding Path=ServiceState.Status, UpdateSourceTrigger=PropertyChanged}" Margin="30, 15" FontSize="14" />
                        <Button x:Name="BtnReporterUpdateStatus" Style="{StaticResource ActionButtonBorder}" IsEnabled="{Binding BtnState.IsEnabledUpdate}" Margin="120, 10" Click="BtnReporterUpdateStatus_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/btn-update.ico" Width="12" Height="12"/>
                                <Label Style="{StaticResource LabelButton}">Update</Label>
                            </StackPanel>
                        </Button>
                    </Canvas>
                    <Canvas Grid.Row="1" Height="60" Background="Transparent" VerticalAlignment="Top">
                        <Button x:Name="BtnReporterStart" Style="{StaticResource ActionButtonBorder}" IsEnabled="{Binding BtnState.IsEnabledStart}" Margin="30, 10" Click="BtnReporterStart_Click" Background="Azure">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/btn-start.ico" Width="14" Height="14"/>
                                <Label Style="{StaticResource LabelButton}">Start</Label>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnReporterStop" Style="{StaticResource ActionButtonBorder}" IsEnabled="{Binding BtnState.IsEnabledStop}" Margin="120, 10" Click="BtnReporterStop_Click" Background="PapayaWhip">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/btn-stop.ico" Width="14" Height="14"/>
                                <Label Style="{StaticResource LabelButton}">Stop</Label>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnReporterCreate" Style="{StaticResource ActionButtonBorder}" IsEnabled="{Binding BtnState.IsEnabledCreate}" Margin="240, 10" Click="BtnReporterCreate_Click" Background="Ivory">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/btn-create.ico" Width="12" Height="12"/>
                                <Label Style="{StaticResource LabelButton}">Create</Label>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnReporterRemove" Style="{StaticResource ActionButtonBorder}" IsEnabled="{Binding BtnState.IsEnabledRemove}" Margin="340, 10" Click="BtnReporterRemove_Click" Background="LavenderBlush">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/icons/btn-remove.ico" Width="12" Height="12"/>
                                <Label Style="{StaticResource LabelButton}">Remove</Label>
                            </StackPanel>
                        </Button>
                    </Canvas>
                    <ScrollViewer Grid.Column="0" Grid.Row="3" Background="Transparent" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                        <ListBox x:Name="ReporterLogsList" Padding="5" BorderThickness="0"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.CanContentScroll="True"
                                 SelectionMode="Extended">
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Text}" TextWrapping="Wrap" Foreground="{Binding Path=TextColorType, Converter={StaticResource brushColorConverter}}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Select all" Command = "SelectAll" Click="BtnReporterItemMenuSelectAll_Click"/>
                                    <MenuItem Header="Copy" Command = "Copy" Click="BtnReporterItemMenuCopy_Click"/>
                                    <MenuItem Header="Clear" Click="BtnReporterItemMenuClear_Click"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.CommandBindings>
                                <CommandBinding Command="ApplicationCommands.SelectAll" CanExecute="CanExecuteLogs" />
                                <CommandBinding Command="ApplicationCommands.Copy" Executed="BtnReporterItemMenuCopy_Click" CanExecute="CanExecuteLogs" />
                            </ListBox.CommandBindings>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
