@model SmartEco.Akimato.Models.Target
@using SmartEco.Akimato.Controllers
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Http
@inject IStringLocalizer<SharedResources> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["Edit"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string Role = Context.Session.GetString("Role");
}

<h1>@SharedLocalizer["Edit"]</h1>

<h4>@SharedLocalizer["Target"]</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="PollutionEnvironmentId" class="control-label"></label>
                <select asp-for="PollutionEnvironmentId" class="form-control" asp-items="ViewBag.PollutionEnvironments"></select>
                <span asp-validation-for="PollutionEnvironmentId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NameKK" class="control-label"></label>
                <input asp-for="NameKK" class="form-control" />
                <span asp-validation-for="NameKK" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NameRU" class="control-label"></label>
                <input asp-for="NameRU" class="form-control" />
                <span asp-validation-for="NameRU" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NameEN" class="control-label"></label>
                <input asp-for="NameEN" class="form-control" />
                <span asp-validation-for="NameEN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeOfAchievement" class="control-label"></label>
                <div class="form-control">
                    @Html.RadioButtonFor(model => model.TypeOfAchievement, true) @SharedLocalizer["Direct"]
                    @Html.RadioButtonFor(model => model.TypeOfAchievement, false) @SharedLocalizer["Reverse"]
                </div>
            </div>
            <div class="form-group">
                <label asp-for="MeasuredParameterUnitId" class="control-label"></label>
                <select asp-for="MeasuredParameterUnitId" class="form-control" asp-items="ViewBag.MeasuredParameterUnits"></select>
                <span asp-validation-for="MeasuredParameterUnitId" class="text-danger"></span>
            </div>
            @if (Role == "admin" || Role == "moderator")
            {
                <div class="form-group">
                    <label asp-for="ProjectId" class="control-label"></label>
                    <select asp-for="ProjectId" class="form-control" asp-items="ViewBag.Projects"></select>
                </div>
            }
            else if (Role == "KaragandaRegion")
            {
                <div class="form-group" hidden="hidden">
                    <label asp-for="ProjectId" class="control-label"></label>
                    <input asp-for="ProjectId" class="form-control" value="1" />
                </div>
            }
            else if (Role == "Almaty")
            {
                <div class="form-group" hidden="hidden">
                    <label asp-for="ProjectId" class="control-label"></label>
                    <input asp-for="ProjectId" class="form-control" value="3" />
                </div>
            }
            else if (Role == "Shymkent")
            {
                <div class="form-group" hidden="hidden">
                    <label asp-for="ProjectId" class="control-label"></label>
                    <input asp-for="ProjectId" class="form-control" value="4" />
                </div>
            }
            <div hidden="hidden">
                @Html.Editor("SortOrder", null, new { value = ViewBag.SortOrder })
                @Html.Editor("PageSize", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                @Html.Editor("PageNumber", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                @Html.Editor("NameKKFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                @Html.Editor("NameRUFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                @Html.Editor("NameENFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                @Html.Editor("PollutionEnvironmentIdFilter", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
            </div>
            <div class="form-group">
                <input type="submit" value="@SharedLocalizer["Save"]" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink(SharedLocalizer["BackToList"], "Index", new { PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, NameKKFilter = ViewBag.NameKKFilter, NameRUFilter = ViewBag.NameRUFilter, NameENFilter = ViewBag.NameENFilter, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter })
</div>

<script>
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }
    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
</script>
