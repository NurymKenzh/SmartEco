@model IEnumerable<SmartEco.Akimato.Models.TargetValue>
@using System.Net
@using SmartEco.Akimato.Controllers
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Http
@inject IStringLocalizer<SharedResources> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["TargetValues"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@SharedLocalizer["TargetValues"]</h1>
@{
    string Role = Context.Session.GetString("Role");
}
@if (Role == "admin" || Role == "moderator" || Role == "Almaty" || Role == "Shymkent" || Role == "KaragandaRegion")
{
    <p>
        @Html.ActionLink(SharedLocalizer["Create"], "Create", new { PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
    </p>
}
@using (Html.BeginForm("Index", "TargetValues", new { SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter }, FormMethod.Get))
{
    @Html.Editor("SortOrder", null, new { htmlAttributes = new { @hidden = "hidden" }, value = ViewBag.SortOrder })
    @if (ViewBag.EndPage > 1)
    {
        <ul class="pagination">
            @if (ViewBag.PageNumber > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                    new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber - 1, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }

            @for (var page = (int)ViewBag.StartPage; page <= (int)ViewBag.EndPage; page++)
            {
                <li class="@(page == ViewBag.PageNumber ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = page, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }

            @if (ViewBag.PageNumber < ViewBag.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber + 1, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.TotalPages, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }
        </ul>
    }
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().Target.PollutionEnvironmentId).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.PollutionEnvironmentIdSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("PollutionEnvironmentIdFilter", (IEnumerable<SelectListItem>)ViewBag.PollutionEnvironments, "", htmlAttributes: new { @class = "form-control", @id = "TypeOfTargetId", @onchange = "ChangeTypeOfTarget()" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().TargetId).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.TargetIdSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("TargetIdFilter", (IEnumerable<SelectListItem>)ViewBag.Targets, "", htmlAttributes: new { @class = "form-control", @id = "TargetId" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().Target.MeasuredParameterUnitId).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.MeasuredParameterUnitIdSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("MeasuredParameterUnitIdFilter", (IEnumerable<SelectListItem>)ViewBag.MeasuredParameterUnits, "", htmlAttributes: new { @class = "form-control" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().TargetTerritory.TerritoryTypeId).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.TerritoryTypeIdSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("TerritoryTypeIdFilter", (IEnumerable<SelectListItem>)ViewBag.TerritoryTypes, "", htmlAttributes: new { @class = "form-control", @id = "TerritoryTypeId", @onchange = "ChangeTerritoryType()" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().TargetTerritoryId).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.TargetTerritoryIdSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("TargetTerritoryIdFilter", (IEnumerable<SelectListItem>)ViewBag.TargetTerritories, "", htmlAttributes: new { @class = "form-control", @id = "TargetTerritoryId" })
                </th>
                @if (Role == "admin" || Role == "moderator")
                {
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(c => c.ToList().FirstOrDefault().ProjectId).ToString(), "Index",
                            new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.ProjectSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                        <br />
                        @Html.DropDownList("ProjectIdFilter", (IEnumerable<SelectListItem>)ViewBag.Projects, "", htmlAttributes: new { @class = "form-control" })
                    </th>
                }
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().Year).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.YearSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("YearFilter", (IEnumerable<SelectListItem>)ViewBag.Year, "", htmlAttributes: new { @class = "form-control" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(t => t.ToList().FirstOrDefault().TargetValueType).ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.TargetValueTypeSort, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                    <br />
                    @Html.DropDownList("TargetValueTypeFilter", (IEnumerable<SelectListItem>)ViewBag.TargetValueType, "", htmlAttributes: new { @class = "form-control" })
                </th>
                <th>
                    @Html.DisplayNameFor(t => t.ToList().FirstOrDefault().Value)
                </th>
                <th>
                    @Html.DropDownList("PageSize", (IEnumerable<SelectListItem>)ViewBag.PageSizeList, htmlAttributes: new { @class = "form-control" })
                    <input type="submit" value="@SharedLocalizer["Find"]" class="btn btn-outline-light">
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Target.PollutionEnvironment.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Target.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Target.MeasuredParameterUnit.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TargetTerritory.TerritoryType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TargetTerritory.Name)
                    </td>
                    @if (Role == "admin" || Role == "moderator")
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.Project.Name)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TargetValueTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>
                    @if (Role == "admin" || Role == "moderator" || Role == "Almaty" || Role == "Shymkent" || Role == "KaragandaRegion")
                    {
                        <td>
                            @Html.ActionLink(SharedLocalizer["Edit"], "Edit", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter }) |
                            @Html.ActionLink(SharedLocalizer["Details"], "Details", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter }) |
                            @Html.ActionLink(SharedLocalizer["Delete"], "Delete", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.ActionLink(SharedLocalizer["Details"], "Details", new { Id = item.Id, PageNumber = ViewBag.PageNumber, PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    @if (ViewBag.EndPage > 1)
    {
        <ul class="pagination">
            @if (ViewBag.PageNumber > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber - 1, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }

            @for (var page = (int)ViewBag.StartPage; page <= (int)ViewBag.EndPage; page++)
            {
                <li class="@(page == ViewBag.PageNumber ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = page, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }

            @if (ViewBag.PageNumber < ViewBag.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.PageNumber + 1, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { PageSize = ViewBag.PageSize, PageNumber = ViewBag.TotalPages, SortOrder = ViewBag.SortOrder, PollutionEnvironmentIdFilter = ViewBag.PollutionEnvironmentIdFilter, TargetIdFilter = ViewBag.TargetIdFilter, MeasuredParameterUnitIdFilter = ViewBag.MeasuredParameterUnitIdFilter, TerritoryTypeIdFilter = ViewBag.TerritoryTypeIdFilter, TargetTerritoryIdFilter = ViewBag.TargetTerritoryIdFilter, YearFilter = ViewBag.YearFilter, TargetValueTypeFilter = ViewBag.TargetValueTypeFilter, ProjectIdFilter = ViewBag.ProjectIdFilter })
                </li>
            }
        </ul>
    }
}